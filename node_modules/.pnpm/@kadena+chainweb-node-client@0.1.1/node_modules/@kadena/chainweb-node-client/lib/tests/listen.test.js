"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('cross-fetch');
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const listen_1 = require("../listen");
const mockFetch_1 = require("./mockdata/mockFetch");
const mockedFunctionFetch = cross_fetch_1.default;
mockedFunctionFetch.mockImplementation(mockFetch_1.mockFetch);
test('/listen should return result of tx queried', async () => {
    // A tx created for chain 0 of devnet using `pact -a`.
    const requestKey = {
        listen: 'ATGCYPMNzdGcFh9Iik73KfMkgURIxaF91Ze4sHFsH8Q',
    };
    const commandResult1 = {
        reqKey: 'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8',
        txId: null,
        result: {
            data: 3,
            status: 'success',
        },
        gas: 0,
        continuation: null,
        metaData: null,
        logs: 'wsATyGqckuIvlm89hhd2j4t6RMkCrcwJe_oeCYr7Th8',
    };
    const localReq = requestKey;
    const responseExpected = commandResult1;
    const responseActual = await (0, listen_1.listen)(localReq, '');
    expect(responseExpected).toEqual(responseActual);
});
//# sourceMappingURL=listen.test.js.map