{"version":3,"file":"poll.test.js","sourceRoot":"","sources":["../../src/tests/poll.test.ts"],"names":[],"mappings":";;;;;AAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAIzB,kCAA+B;AAE/B,oDAAiD;AAEjD,8DAA8C;AAE9C,MAAM,mBAAmB,GAAG,qBAA0C,CAAC;AACvE,mBAAmB,CAAC,kBAAkB,CACpC,qBAA8C,CAC/C,CAAC;AAEF,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;IACnE,sDAAsD;IACtD,MAAM,aAAa,GAAqB;QACtC,WAAW,EAAE,CAAC,6CAA6C,CAAC;KAC7D,CAAC;IAEF,MAAM,aAAa,GAAkB;QACnC,6CAA6C,EAAE;YAC7C,MAAM,EAAE,6CAA6C;YACrD,IAAI,EAAE,IAAI;YACV,MAAM,EAAE;gBACN,IAAI,EAAE,CAAC;gBACP,MAAM,EAAE,SAAS;aAClB;YACD,GAAG,EAAE,CAAC;YACN,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,6CAA6C;SACpD;KACF,CAAC;IACF,MAAM,QAAQ,GAAqB,aAAa,CAAC;IACjD,MAAM,gBAAgB,GAAkB,aAAa,CAAC;IACtD,MAAM,cAAc,GAA6B,MAAM,IAAA,WAAI,EAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAE1E,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC","sourcesContent":["jest.mock('cross-fetch');\n\nimport type { IPollRequestBody, IPollResponse } from '@kadena/types';\n\nimport { poll } from '../poll';\n\nimport { mockFetch } from './mockdata/mockFetch';\n\nimport fetch, { Response } from 'cross-fetch';\n\nconst mockedFunctionFetch = fetch as jest.MockedFunction<typeof fetch>;\nmockedFunctionFetch.mockImplementation(\n  mockFetch as jest.MockedFunction<typeof fetch>,\n);\n\ntest('/poll should return request keys of txs submitted', async () => {\n  // A tx created for chain 0 of devnet using `pact -a`.\n  const signedCommand: IPollRequestBody = {\n    requestKeys: ['ATGCYPMNzdGcFh9Iik73KfMkgURIxaF91Ze4sHFsH8Q'],\n  };\n\n  const commandResult: IPollResponse = {\n    'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8': {\n      reqKey: 'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8',\n      txId: null,\n      result: {\n        data: 3,\n        status: 'success',\n      },\n      gas: 0,\n      continuation: null,\n      metaData: null,\n      logs: 'wsATyGqckuIvlm89hhd2j4t6RMkCrcwJe_oeCYr7Th8',\n    },\n  };\n  const localReq: IPollRequestBody = signedCommand;\n  const responseExpected: IPollResponse = commandResult;\n  const responseActual: Response | IPollResponse = await poll(localReq, '');\n\n  expect(responseExpected).toEqual(responseActual);\n});\n"]}