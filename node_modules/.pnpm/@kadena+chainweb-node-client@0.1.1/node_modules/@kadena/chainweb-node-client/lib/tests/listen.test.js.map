{"version":3,"file":"listen.test.js","sourceRoot":"","sources":["../../src/tests/listen.test.ts"],"names":[],"mappings":";;;;;AAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAIzB,8DAA8C;AAI9C,sCAAmC;AAEnC,oDAAiD;AAEjD,MAAM,mBAAmB,GAAG,qBAA0C,CAAC;AACvE,mBAAmB,CAAC,kBAAkB,CACpC,qBAA8C,CAC/C,CAAC;AAEF,IAAI,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;IAC5D,sDAAsD;IACtD,MAAM,UAAU,GAAuB;QACrC,MAAM,EAAE,6CAA6C;KACtD,CAAC;IAEF,MAAM,cAAc,GAAmB;QACrC,MAAM,EAAE,6CAA6C;QACrD,IAAI,EAAE,IAAI;QACV,MAAM,EAAE;YACN,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,SAAS;SAClB;QACD,GAAG,EAAE,CAAC;QACN,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,6CAA6C;KACpD,CAAC;IACF,MAAM,QAAQ,GAAuB,UAAU,CAAC;IAChD,MAAM,gBAAgB,GAAmB,cAAc,CAAC;IACxD,MAAM,cAAc,GAA8B,MAAM,IAAA,eAAM,EAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAE7E,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC","sourcesContent":["jest.mock('cross-fetch');\n\nimport { ICommandResult } from '@kadena/types';\n\nimport fetch, { Response } from 'cross-fetch';\n\nimport type { IListenRequestBody, ListenResponse } from '@kadena/types';\n\nimport { listen } from '../listen';\n\nimport { mockFetch } from './mockdata/mockFetch';\n\nconst mockedFunctionFetch = fetch as jest.MockedFunction<typeof fetch>;\nmockedFunctionFetch.mockImplementation(\n  mockFetch as jest.MockedFunction<typeof fetch>,\n);\n\ntest('/listen should return result of tx queried', async () => {\n  // A tx created for chain 0 of devnet using `pact -a`.\n  const requestKey: IListenRequestBody = {\n    listen: 'ATGCYPMNzdGcFh9Iik73KfMkgURIxaF91Ze4sHFsH8Q',\n  };\n\n  const commandResult1: ListenResponse = {\n    reqKey: 'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8',\n    txId: null,\n    result: {\n      data: 3,\n      status: 'success',\n    },\n    gas: 0,\n    continuation: null,\n    metaData: null,\n    logs: 'wsATyGqckuIvlm89hhd2j4t6RMkCrcwJe_oeCYr7Th8',\n  };\n  const localReq: IListenRequestBody = requestKey;\n  const responseExpected: ListenResponse = commandResult1;\n  const responseActual: ICommandResult | Response = await listen(localReq, '');\n\n  expect(responseExpected).toEqual(responseActual);\n});\n"]}