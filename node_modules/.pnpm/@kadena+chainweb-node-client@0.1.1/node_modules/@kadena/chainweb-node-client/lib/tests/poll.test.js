"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('cross-fetch');
const poll_1 = require("../poll");
const mockFetch_1 = require("./mockdata/mockFetch");
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const mockedFunctionFetch = cross_fetch_1.default;
mockedFunctionFetch.mockImplementation(mockFetch_1.mockFetch);
test('/poll should return request keys of txs submitted', async () => {
    // A tx created for chain 0 of devnet using `pact -a`.
    const signedCommand = {
        requestKeys: ['ATGCYPMNzdGcFh9Iik73KfMkgURIxaF91Ze4sHFsH8Q'],
    };
    const commandResult = {
        'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8': {
            reqKey: 'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8',
            txId: null,
            result: {
                data: 3,
                status: 'success',
            },
            gas: 0,
            continuation: null,
            metaData: null,
            logs: 'wsATyGqckuIvlm89hhd2j4t6RMkCrcwJe_oeCYr7Th8',
        },
    };
    const localReq = signedCommand;
    const responseExpected = commandResult;
    const responseActual = await (0, poll_1.poll)(localReq, '');
    expect(responseExpected).toEqual(responseActual);
});
//# sourceMappingURL=poll.test.js.map