{"version":3,"file":"parseResponse.js","sourceRoot":"","sources":["../src/parseResponse.ts"],"names":[],"mappings":";;;AAEA;;;;;;GAMG;AACI,KAAK,UAAU,aAAa,CAAI,QAAkB;IACvD,IAAI,QAAQ,CAAC,EAAE,EAAE;QACf,OAAO,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAM,CAAC;KACrC;SAAM;QACL,IAAI;YACF,oBAAoB;YAEpB,MAAM,YAAY,GAAW,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;SAChD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,QAAwB,CAAC;SACjC;KACF;AACH,CAAC;AAbD,sCAaC","sourcesContent":["import type { Response } from 'cross-fetch';\n\n/**\n * Parses raw `fetch` response into a typed JSON value.\n *\n * Corresponds to `parseRes` function:\n * https://github.com/kadena-io/pact-lang-api/blob/master/pact-lang-api.js#L546\n * @alpha\n */\nexport async function parseResponse<T>(response: Response): Promise<T> {\n  if (response.ok) {\n    return (await response.json()) as T;\n  } else {\n    try {\n      // Handle API errors\n\n      const textResponse: string = await response.text();\n      return Promise.reject(new Error(textResponse));\n    } catch (error) {\n      return response as unknown as T;\n    }\n  }\n}\n"]}