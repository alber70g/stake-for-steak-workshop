{"version":3,"file":"PactAPI.js","sourceRoot":"","sources":["../src/PactAPI.ts"],"names":[],"mappings":"","sourcesContent":["import type { IBase64Url } from './Base64Url';\nimport type {\n  ChainId,\n  ICommand,\n  ICommandResult,\n  SPVProof,\n} from './PactCommand';\n\n// TODO: Add descriptions\n/**\n * @alpha\n */\nexport interface IRequestKeys {\n  requestKeys: Array<IBase64Url>;\n}\n\n/**\n * Request type of /send endpoint.\n *\n * @param cmds - Non-empty array of Pact commands (or transactions) to submit to server.\n * @alpha\n */\nexport interface ISendRequestBody {\n  cmds: Array<ICommand>;\n}\n\n/**\n * Response type of /send endpoint.\n *\n * @param requestKeys - List of request keys (or command hashes) of the transactions submitted.\n *                      Can be sent to /poll and /listen to retrieve transaction results.\n *\n * @alpha\n */\nexport type SendResponse = IRequestKeys;\n/**\n * @alpha\n */\nexport type LocalRequestBody = ICommand;\n/**\n * @alpha\n */\nexport type LocalResponse = ICommandResult;\n\n/**\n * Request type of /poll endpoint.\n *\n * @param requestKeys - List of request keys (or command hashes) to poll for.\n *\n * @alpha\n */\nexport interface IPollRequestBody {\n  requestKeys: Array<IBase64Url>;\n}\n\n/**\n * @alpha\n */\nexport interface IPollResponse {\n  [key: IBase64Url]: ICommandResult;\n}\n\n/**\n * Request type of /listen endpoint.\n *\n * @param listen - Single request key (or command hash) to listen for.\n *\n * @alpha\n */\nexport interface IListenRequestBody {\n  listen: IBase64Url;\n}\n\n/**\n * @alpha\n */\nexport type ListenResponse = ICommandResult;\n\n/**\n * Request type of /spv endpoint.\n *\n * @param requestKey - Request Key of an initiated cross chain transaction at the source chain.\n * @param targetChainId - Target chain id of the cross chain transaction.\n *\n * @alpha\n */\nexport interface ISPVRequestBody {\n  requestKey: IBase64Url;\n  targetChainId: ChainId;\n}\n\n/**\n * Response type of /spv endpoint.\n *\n * Returns backend-specific data for continuing a cross-chain proof.\n *\n * @alpha\n */\nexport type SPVResponse = SPVProof;\n"]}