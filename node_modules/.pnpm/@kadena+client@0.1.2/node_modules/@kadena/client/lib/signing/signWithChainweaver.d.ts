import { IPactCommand } from '../interfaces/IPactCommand';
import { IUnsignedTransaction } from '../interfaces/IUnsignedTransaction';
import { ICommandBuilder } from '../pact';
/**
 * @alpha
 */
export declare type IChainweaverSig = string;
/**
 * @alpha
 */
export interface IChainweaverSignedCommand {
    sigs: {
        [pubkey: string]: IChainweaverSig;
    };
    cmd: string;
}
/**
 * @alpha
 */
export interface IChainweaverQuickSignRequestBody {
    reqs: IUnsignedTransaction[];
}
/**
 * @alpha
 */
export declare function signWithChainweaver<T1 extends string, T2>(...transactions: (IPactCommand & ICommandBuilder<Record<T1, T2>>)[]): Promise<(IPactCommand & ICommandBuilder<Record<T1, T2>>)[]>;
//# sourceMappingURL=signWithChainweaver.d.ts.map