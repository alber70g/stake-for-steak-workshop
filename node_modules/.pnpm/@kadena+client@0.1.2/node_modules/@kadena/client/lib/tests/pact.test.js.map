{"version":3,"file":"pact.test.js","sourceRoot":"","sources":["../../src/tests/pact.test.ts"],"names":[],"mappings":"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","sourcesContent":["jest.mock('cross-fetch', () => {\n  return {\n    __esModule: true,\n    default: jest.fn(),\n  };\n});\nimport { IUnsignedTransaction } from '../interfaces/IUnsignedTransaction';\nimport { ICommandBuilder, Pact, PactCommand } from '../pact';\n\nimport fetch from 'cross-fetch';\n\nfunction getCode(transaction: IUnsignedTransaction): string {\n  return JSON.parse(transaction.cmd).payload.exec.code;\n}\n\ndescribe('Pact proxy', () => {\n  it('creates an instance of the proxy', async () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const tx = pact.modules.coin.transfer('alice', 'bob', 100).createCommand();\n    expect(getCode(tx)).toBe('(coin.transfer \"alice\" \"bob\" 100.0)');\n  });\n\n  it('generates two different commands when executed after each other', () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n\n    const tx = pact.modules.coin.transfer('alice', 'bob', 100).createCommand();\n\n    const tx2 = pact.modules.coin.transfer('bob', 'alice', 100).createCommand();\n\n    expect(getCode(tx)).toBe('(coin.transfer \"alice\" \"bob\" 100.0)');\n    expect(getCode(tx2)).toBe('(coin.transfer \"bob\" \"alice\" 100.0)');\n  });\n\n  it('generates two different commands when generated asynchronously', () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const tx = pact.modules.coin.transfer('alice', 'bob', 100).createCommand();\n    const tx2 = pact.modules.coin['transfer-xchain'](\n      'k:1',\n      'k:1',\n      'chain1',\n      'chain2',\n      100,\n    ).createCommand();\n\n    expect(getCode(tx2)).toBe(\n      '(coin.transfer-xchain \"k:1\" \"k:1\" \"chain1\" \"chain2\" 100.0)',\n    );\n    expect(getCode(tx)).toBe('(coin.transfer \"alice\" \"bob\" 100.0)');\n  });\n\n  it('generates a command with data', () => {\n    const sender =\n      'k:554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94';\n    const receiver =\n      'k:e34b62cb48526f89e419dae4e918996d66582b5951361c98ee387665a94b7ad8';\n    const amount = 0.23;\n    const signerPubKey = sender.split('k:')[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n\n    const transaction = pact.modules.coin['transfer-create'](\n      sender,\n      receiver,\n      () => \"(read-keyset 'ks)\",\n      amount,\n    )\n      .addCap('coin.GAS', signerPubKey)\n      .addCap('coin.TRANSFER', signerPubKey, sender, receiver, amount)\n      .addData({\n        ks: {\n          keys: [\n            '554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94',\n          ],\n          pred: 'keys-all',\n        },\n      })\n      .setMeta(\n        {\n          gasLimit: 1000,\n          gasPrice: 1.0e-6,\n          sender: signerPubKey,\n          ttl: 10 * 60, // 10 minutes\n        },\n        'testnet04',\n      )\n      .createCommand();\n\n    expect(JSON.parse(transaction.cmd).payload.exec.data.ks.keys).toEqual([\n      '554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94',\n    ]);\n  });\n\n  it('makes a well formatted /local call', async () => {\n    (fetch as jest.Mock).mockResolvedValue({\n      status: 200,\n      ok: true,\n      text: () => JSON.stringify({ results: [] }),\n      json: () => {},\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const builder: ICommandBuilder<{}> = pact.modules.coin.transfer(\n      'from',\n      'to',\n      1.234,\n    );\n    await builder.local('fake-api-host.local.co');\n\n    const body = builder.createCommand();\n\n    expect(fetch).toBeCalledWith('fake-api-host.local.co/api/v1/local', {\n      body: JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    });\n  });\n\n  it('makes a well formatted /send call', async () => {\n    (fetch as jest.Mock).mockResolvedValue({\n      status: 200,\n      ok: true,\n      text: () => JSON.stringify({ requestKeys: ['key1'] }),\n      json: () => ({ requestKeys: ['key1'] }),\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const builder: ICommandBuilder<{}> = pact.modules.coin.transfer(\n      'from',\n      'to',\n      1.234,\n    );\n    await builder.send('fake-api-host.local.co');\n\n    const body = { cmds: [builder.createCommand()] };\n\n    expect(fetch).toBeCalledWith('fake-api-host.local.co/api/v1/send', {\n      body: JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    });\n  });\n\n  it('makes a well formatted /poll call', async () => {\n    (fetch as jest.Mock).mockResolvedValue({\n      status: 200,\n      ok: true,\n      text: () => JSON.stringify({ requestKeys: ['key1'] }),\n      json: () => ({ requestKeys: ['key1'] }),\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const builder: ICommandBuilder<{}> = pact.modules.coin.transfer(\n      'from',\n      'to',\n      1.234,\n    );\n\n    const { requestKeys } = await builder.send('fake-api-host.local.co');\n    const body = { cmds: [builder.createCommand()] };\n\n    expect(fetch).toBeCalledWith('fake-api-host.local.co/api/v1/send', {\n      body: JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    });\n\n    await builder.poll('fake-api-host.local.co');\n    expect(fetch).toBeCalledWith('fake-api-host.local.co/api/v1/poll', {\n      body: JSON.stringify({ requestKeys }),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    });\n  });\n\n  it('throws when trying a .poll() when no requestkey is present', async () => {\n    (fetch as jest.Mock).mockResolvedValue({\n      status: 200,\n      ok: true,\n      text: () => JSON.stringify({ requestKeys: ['key1'] }),\n      json: () => ({ requestKeys: ['key1'] }),\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pact = Pact as any;\n    const builder: ICommandBuilder<{}> = pact.modules.coin.transfer(\n      'from',\n      'to',\n      1.234,\n    );\n\n    expect(() => builder.poll('fake-api-host.local.co')).toThrow();\n  });\n});\n\ndescribe('TransactionCommand', () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const pact = Pact as any;\n  const sender =\n    'k:554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94' as const;\n  const receiver =\n    'k:e34b62cb48526f89e419dae4e918996d66582b5951361c98ee387665a94b7ad8';\n  const amount = 0.23;\n  const senderPubKey = sender.split('k:')[1];\n  const receiverPubKey = receiver.split('k:')[1];\n\n  let transactionCommand: PactCommand;\n\n  beforeEach(() => {\n    transactionCommand = pact.modules.coin['transfer-create'](\n      sender,\n      receiver,\n      () => \"(read-keyset 'ks)\",\n      amount,\n    )\n      .addCap('coin.GAS', senderPubKey)\n      .addCap('coin.TRANSFER', senderPubKey, sender, receiver, amount)\n      .addData({\n        ks: {\n          keys: [\n            '554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94',\n          ],\n          pred: 'keys-all',\n        },\n      })\n      .setMeta(\n        {\n          sender: senderPubKey,\n        },\n        'testnet04',\n      );\n  });\n\n  it('resets `cmd` `hash` and `signatures` when `setMeta` is called', async () => {\n    const transaction = transactionCommand.createCommand();\n\n    const updatedTransactionCommand = transactionCommand.setMeta(\n      {\n        sender: receiverPubKey,\n      },\n      'testnet04',\n    );\n\n    expect(updatedTransactionCommand.sigs).toEqual([undefined]);\n\n    const updatedTransaction = updatedTransactionCommand.createCommand();\n\n    expect(transaction.cmd).not.toEqual(updatedTransaction.cmd);\n    expect(transaction.hash).not.toEqual(updatedTransaction.hash);\n  });\n\n  it('resets `cmd` `hash` and `signatures` when `addData` is called', async () => {\n    const transaction = transactionCommand.createCommand();\n\n    const updatedTransactionCommand = transactionCommand.addData({\n      ks: {\n        keys: [\n          '554754f48b16df24b552f6832dda090642ed9658559fef9f3ee1bb4637ea7c94',\n          '1c131be8d83f1d712b33ae0c7afd60bca0db80f362f5de9ba8792c6f4e7df488',\n        ],\n        pred: 'keys-all',\n      },\n    });\n\n    expect(updatedTransactionCommand.sigs).toEqual([undefined]);\n\n    const updatedTransaction = updatedTransactionCommand.createCommand();\n\n    expect(transaction.cmd).not.toEqual(updatedTransaction.cmd);\n    expect(transaction.hash).not.toEqual(updatedTransaction.hash);\n  });\n\n  it('resets `cmd` `hash` and `signatures` when `addCap` is called', async () => {\n    const transaction = transactionCommand.createCommand();\n\n    const updatedTransactionCommand = transactionCommand.addCap(\n      'coin.GAS',\n      senderPubKey,\n    );\n\n    expect(updatedTransactionCommand.sigs).toEqual([undefined]);\n\n    const updatedTransaction = updatedTransactionCommand.createCommand();\n\n    expect(transaction.cmd).not.toEqual(updatedTransaction.cmd);\n    expect(transaction.hash).not.toEqual(updatedTransaction.hash);\n  });\n});\n"]}