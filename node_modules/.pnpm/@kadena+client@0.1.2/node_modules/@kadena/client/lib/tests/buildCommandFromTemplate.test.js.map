{"version":3,"file":"buildCommandFromTemplate.test.js","sourceRoot":"","sources":["../../src/tests/buildCommandFromTemplate.test.ts"],"names":[],"mappings":";;AAAA,0EAAuE;AAEvE,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,KAAK,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAChC,MAAM,QAAQ,GAAG,gCAAgC,CAAC;QAClD,MAAM,GAAG,GAAG,IAAA,mDAAwB,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { buildCommandFromTemplate } from '../buildCommandFromTemplate';\n\ndescribe('buildCommandFromTemplate', () => {\n  it('merges parts, holes and args correctly', () => {\n    const parts = [`This is a template for `, `.`];\n    const holes = ['name'];\n    const args = { name: 'Albert' };\n    const expected = 'This is a template for Albert.';\n    const cmd = buildCommandFromTemplate(parts, holes, args);\n    expect(cmd).toBe(expected);\n  });\n});\n"]}