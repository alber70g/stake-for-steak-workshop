{"version":3,"file":"buildUnsignedTransaction.js","sourceRoot":"","sources":["../src/buildUnsignedTransaction.ts"],"names":[],"mappings":";;;;;;AACA,yEAAsE;AACtE,iCAAwE;AAExE,kDAAyC;AACzC,+BAA6B;AAE7B,MAAM,KAAK,GAAa,IAAA,eAAM,EAAC,iCAAiC,CAAC,CAAC;AAElE;;GAEG;AACH,SAAgB,wBAAwB,CACtC,KAAe,EACf,KAAe,EACf,IAA4B;IAE5B,MAAM,cAAc,GAAW,IAAA,mDAAwB,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5E,MAAM,OAAO,GAAG,IAAA,YAAK,EAAC,cAAc,CAAiB,CAAC;IAEtD,IAAI;QACF,MAAM,cAAc,GAAG,IAAA,oCAA6B,EAAC,OAAO,CAAC,CAAC;QAC9D,KAAK,CAAC,wCAAwC,EAAE,cAAc,CAAC,CAAC;QAChE,OAAO,cAAc,CAAC;KACvB;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CAAC;;;MAGd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;aAEb,CAAC,EAAE,CAAC,CAAC;KACf;AACH,CAAC;AApBD,4DAoBC","sourcesContent":["import { IPactCommand } from './interfaces/IPactCommand';\nimport { buildCommandFromTemplate } from './buildCommandFromTemplate';\nimport { createPactCommandFromTemplate, ICommandBuilder } from './pact';\n\nimport _debug, { Debugger } from 'debug';\nimport { parse } from 'yaml';\n\nconst debug: Debugger = _debug('client:buildUnsignedTransaction');\n\n/**\n * @internal\n */\nexport function buildUnsignedTransaction(\n  parts: string[],\n  holes: string[],\n  args: Record<string, string>,\n): IPactCommand & ICommandBuilder<{}> {\n  const filledTemplate: string = buildCommandFromTemplate(parts, holes, args);\n  const payload = parse(filledTemplate) as IPactCommand;\n\n  try {\n    const commandBuilder = createPactCommandFromTemplate(payload);\n    debug('CommandBuilder generated from template', commandBuilder);\n    return commandBuilder;\n  } catch (e) {\n    throw new Error(`An error occurred when parsing the filled template.\n    ! Please check your template and make sure there aren't any syntax errors.\n    The values:\n    ${JSON.stringify(args)}\n\n    Error: ${e}`);\n  }\n}\n"]}