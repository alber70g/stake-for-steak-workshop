{"version":3,"file":"PactExpression.test.js","sourceRoot":"","sources":["../../../src/wip-unpublished/tests/PactExpression.test.ts"],"names":[],"mappings":";;AAAA,sDAAmD;AAgBnD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC;QAC5B,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnB,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC,IAAI,CAAC;QACjC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC,IAAI,CAAC;QACjC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5C,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,EAAE,GAAG,IAAA,+BAAc,GAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,8DAA8D;QAC9D,MAAM,EAAE,GAAI,IAAA,+BAAc,GAAU,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QAC3E,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAA;IAC1E,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { PactExpression } from '../PactExpression';\n\ndeclare module '../PactExpression' {\n  interface ITestModule {\n    simpleFn: () => IPactBuilder;\n    transfer: (\n      sender: string,\n      receiver: string,\n      amount: number,\n    ) => IPactBuilder;\n  }\n  interface IPactModules {\n    test: ITestModule & IPactBuilder;\n  }\n}\n\ndescribe('PactExpression', () => {\n  it('can be called to get a builder', () => {\n    const pe = PactExpression();\n    expect(pe.generate()).toEqual('()');\n  });\n\n  it('builds an expression', () => {\n    const pe = PactExpression();\n    pe.test.generate();\n    expect(pe.generate()).toEqual('(test)');\n  });\n\n  it('creates an expression', () => {\n    const pe = PactExpression().test;\n    expect(pe.generate()).toEqual('(test)');\n  });\n\n  it('creates an expression', () => {\n    const pe = PactExpression().test;\n    expect(pe.generate()).toEqual('(test)');\n  });\n\n  it('creates an expression from a subelement', () => {\n    const pe = PactExpression().test.simpleFn();\n    expect(pe.generate()).toEqual('(test.simpleFn)');\n  });\n\n  it('creates an expression from a subelement with arguments', () => {\n    const pe = PactExpression().test.transfer('sender', 'receiver', 10);\n    expect(pe.generate()).toEqual('(test.transfer \"sender\" \"receiver\" 10.0)');\n  });\n\n  it('creates something that is not defined in the d.ts', () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pe = (PactExpression() as any).something.that.is.not.defined(\"bogus\")\n    expect(pe.generate()).toEqual('(something.that.is.not.defined \"bogus\")')\n  })\n});\n"]}