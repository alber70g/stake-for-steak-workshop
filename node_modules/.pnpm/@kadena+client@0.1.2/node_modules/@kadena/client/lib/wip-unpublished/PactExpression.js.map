{"version":3,"file":"PactExpression.js","sourceRoot":"","sources":["../../src/wip-unpublished/PactExpression.ts"],"names":[],"mappings":";;;AAAA,2CAA2C;AAE3C,kDAA+C;AAO/C,SAAgB,cAAc;IAC5B,IAAI,UAAU,GAAW,EAAE,CAAC;IAC5B,MAAM,IAAI,GAAa,EAAE,CAAC;IAC1B,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,MAAM,OAAO,GAAiB,IAAI,KAAK,CACrC,cAAa,CAA4B,EACzC;QACE,GAAG,CAAC,MAAe,EAAE,IAAY,EAAE,QAAiB;YAClD,IAAI,IAAI,KAAK,UAAU,EAAE;gBACvB,UAAU,GAAG,IAAA,kBAAS,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAS,CAAC,CAAC,CAAC;gBAC/D,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC;aACzB;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,OAAO,CAAC;QACjB,CAAC;QACD,KAAK,CAAC,MAAe,EAAE,OAAgB,EAAE,QAA6B;YACpE,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;YACvB,OAAO,OAAO,CAAC;QACjB,CAAC;KACF,CACc,CAAC;IAElB,OAAO,OAAO,CAAC;AACjB,CAAC;AAvBD,wCAuBC","sourcesContent":["import { createExp } from '@kadena/pactjs';\n\nimport { parseType } from '../utils/parseType';\n\nexport interface IPactModules {}\nexport type IPactBuilder = {\n  generate(): string;\n} & IPactModules;\n\nexport function PactExpression(): IPactBuilder {\n  let expression: string = '';\n  const path: string[] = [];\n  const args: (string | number)[] = [];\n  const builder: IPactBuilder = new Proxy(\n    function () {} as unknown as IPactBuilder,\n    {\n      get(target: unknown, prop: string, receiver: unknown) {\n        if (prop === 'generate') {\n          expression = createExp(path.join('.'), ...args.map(parseType));\n          return () => expression;\n        }\n        path.push(prop);\n        return builder;\n      },\n      apply(target: unknown, thisArg: unknown, argArray: (string | number)[]) {\n        args.push(...argArray);\n        return builder;\n      },\n    },\n  ) as IPactBuilder;\n\n  return builder;\n}\n"]}