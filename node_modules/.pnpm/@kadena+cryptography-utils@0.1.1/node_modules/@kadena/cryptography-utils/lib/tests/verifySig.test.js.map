{"version":3,"file":"verifySig.test.js","sourceRoot":"","sources":["../../src/tests/verifySig.test.ts"],"names":[],"mappings":";;AAAA,8DAA2D;AAC3D,0CAAuC;AACvC,4CAAyC;AAEzC,IAAI,CAAC,+EAA+E,EAAE,GAAG,EAAE;IACzF,MAAM,OAAO,GAAG;QACd,IAAI,EAAE,6CAA6C;QACnD,GAAG,EAAE,kIAAkI;QACvI,MAAM,EAAE,kEAAkE;KAC3E,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;IAEtC,MAAM,MAAM,GAAG,IAAA,qBAAS,EACtB,IAAA,uCAAkB,EAAC,IAAI,CAAC,EACxB,IAAA,mBAAQ,EAAC,GAAG,CAAC,EACb,IAAA,mBAAQ,EAAC,MAAM,CAAC,CACjB,CAAC;IACF,MAAM,QAAQ,GAAG,IAAI,CAAC;IAEtB,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC","sourcesContent":["import { base64UrlDecodeArr } from '../base64UrlDecodeArr';\nimport { hexToBin } from '../hexToBin';\nimport { verifySig } from '../verifySig';\n\ntest('Takes in message, signature, and public key in binary object, returns boolean', () => {\n  const signCmd = {\n    hash: 'uolsidh4DWN-D44FoElnosL8e5-cGCGn_0l2Nct5mq8',\n    sig: '4b0ecfbb0e8f3cb291b57abd27028ceaa221950affa39f10efbf4a5fe740d32670e94c3d3949a7e5f4f6ea692052ca110f7cb2e9a8ee2c5eff4251ed84bbfa03',\n    pubKey: 'ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d',\n  };\n  const { hash, sig, pubKey } = signCmd;\n\n  const actual = verifySig(\n    base64UrlDecodeArr(hash),\n    hexToBin(sig),\n    hexToBin(pubKey),\n  );\n  const expected = true;\n\n  expect(expected).toEqual(actual);\n});\n"]}