{"version":3,"file":"base64UrlEncodeArr.test.js","sourceRoot":"","sources":["../../src/tests/base64UrlEncodeArr.test.ts"],"names":[],"mappings":";;AAAA,8DAA2D;AAE3D,IAAI,CAAC,0EAA0E,EAAE,GAAG,EAAE;IACpF,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC;QAC5B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;QAC3E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;KACtE,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,IAAA,uCAAkB,EAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,QAAQ,GAAG,6CAA6C,CAAC;IAE/D,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC","sourcesContent":["import { base64UrlEncodeArr } from '../base64UrlEncodeArr';\n\ntest('Takes in Uint8Array binary object and outputs Base 64 URL encoded string', () => {\n  const hshbin = new Uint8Array([\n    205, 170, 167, 69, 13, 17, 99, 60, 83, 113, 200, 237, 98, 128, 111, 66, 192,\n    232, 228, 175, 102, 198, 190, 19, 16, 95, 135, 33, 132, 226, 228, 154,\n  ]);\n\n  const actual = base64UrlEncodeArr(hshbin);\n  const expected = 'zaqnRQ0RYzxTccjtYoBvQsDo5K9mxr4TEF-HIYTi5Jo';\n\n  expect(expected).toEqual(actual);\n});\n"]}