{"version":3,"file":"restoreKeyPairFromSecretKey.test.js","sourceRoot":"","sources":["../../src/tests/restoreKeyPairFromSecretKey.test.ts"],"names":[],"mappings":";;AAAA,gFAA6E;AAE7E,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;IAC3C,MAAM,SAAS,GACb,kEAAkE,CAAC;IAErE,MAAM,MAAM,GAAG,IAAA,yDAA2B,EAAC,SAAS,CAAC,CAAC;IACtD,MAAM,QAAQ,GAAG;QACf,SAAS,EACP,kEAAkE;QACpE,SAAS,EACP,kEAAkE;KACrE,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,iDAAiD,EAAE,GAAG,EAAE;IAC3D,MAAM,SAAS,GACb,mEAAmE,CAAC;IACtE,MAAM,CAAC,GAAG,EAAE,CAAC,IAAA,yDAA2B,EAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AACjE,CAAC,CAAC,CAAC","sourcesContent":["import { restoreKeyPairFromSecretKey } from '../restoreKeyPairFromSecretKey';\n\ntest('restores keypair from secretkey', () => {\n  const secretKey =\n    '53d1e1639bd6c607d33f3efcbaafc6d0d4fb022cd57a3a9b8534ddcd8c471902';\n\n  const actual = restoreKeyPairFromSecretKey(secretKey);\n  const expected = {\n    publicKey:\n      '85bef77ea3570387cac57da34938f246c7460dc533a67823f065823e327b2afd',\n    secretKey:\n      '53d1e1639bd6c607d33f3efcbaafc6d0d4fb022cd57a3a9b8534ddcd8c471902',\n  };\n\n  expect(expected).toEqual(actual);\n});\n\ntest('Takes in a bad sized secret key and throw error', () => {\n  const secretKey =\n    '53d1e1639bd6c607d33f3efcbaafc6d0d4fb022cd57a3a9b8534ddcd8c471902@';\n  expect(() => restoreKeyPairFromSecretKey(secretKey)).toThrow();\n});\n"]}