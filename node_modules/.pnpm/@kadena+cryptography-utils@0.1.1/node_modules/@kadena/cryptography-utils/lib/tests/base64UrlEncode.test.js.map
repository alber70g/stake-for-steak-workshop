{"version":3,"file":"base64UrlEncode.test.js","sourceRoot":"","sources":["../../src/tests/base64UrlEncode.test.ts"],"names":[],"mappings":";;AAAA,mCAAgC;AAChC,wDAAqD;AACrD,wDAAqD;AAErD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;QACpE,MAAM,GAAG,GAAG,IAAA,iCAAe,EACzB,IAAI,UAAU,CAAC;YACb,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YACtE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACrE,GAAG;SACJ,CAAC,CACH,CAAC;QAEF,MAAM,MAAM,GAAG,IAAA,iCAAe,EAAC,GAAG,CAAC,CAAC;QACpC,MAAM,QAAQ,GAAG,6CAA6C,CAAC;QAE/D,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,GAAG,GAAG,6BAA6B,CAAC;QAE1C,IAAA,eAAM,EAAC,GAAG,EAAE,CAAC,IAAA,iCAAe,EAAC,GAAG,CAAC,CAAC,CAAC;QACnC,IAAI;YACF,IAAA,iCAAe,EAAC,GAAG,CAAC,CAAC;SACtB;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SAClD;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { throws } from 'assert';\nimport { base64UrlEncode } from '../base64UrlEncode';\nimport { uint8ArrayToStr } from '../uint8ArrayToStr';\n\ndescribe('base64UrlEncode', () => {\n  it('takes in a string and outputs a Base 64 URL encoded string', () => {\n    const str = uint8ArrayToStr(\n      new Uint8Array([\n        205, 170, 167, 69, 13, 17, 99, 60, 83, 113, 200, 237, 98, 128, 111, 66,\n        192, 232, 228, 175, 102, 198, 190, 19, 16, 95, 135, 33, 132, 226, 228,\n        154,\n      ]),\n    );\n\n    const actual = base64UrlEncode(str);\n    const expected = 'zaqnRQ0RYzxTccjtYoBvQsDo5K9mxr4TEF-HIYTi5Jo';\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('throws InvalidCharacterError', () => {\n    const str = 'this is a special string ðŸ§ ';\n\n    throws(() => base64UrlEncode(str));\n    try {\n      base64UrlEncode(str);\n    } catch (error) {\n      expect(error.name).toBe('InvalidCharacterError');\n    }\n  });\n});\n"]}