{"version":3,"file":"binToHex.test.js","sourceRoot":"","sources":["../../src/tests/binToHex.test.ts"],"names":[],"mappings":";;AAAA,0CAAuC;AAEvC,IAAI,CAAC,+CAA+C,EAAE,GAAG,EAAE;IACzD,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC;QAC3B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;QAC3E,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;QAC1E,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;QACvE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;KACpE,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,IAAA,mBAAQ,EAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,QAAQ,GACZ,kIAAkI,CAAC;IAErI,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC","sourcesContent":["import { binToHex } from '../binToHex';\n\ntest('should convert binary object to an hex string', () => {\n  const uint8 = new Uint8Array([\n    134, 147, 230, 65, 174, 43, 190, 158, 168, 2, 199, 54, 244, 32, 39, 176, 63,\n    134, 175, 230, 60, 174, 49, 94, 113, 105, 201, 196, 150, 193, 115, 50, 186,\n    84, 178, 36, 209, 146, 77, 217, 132, 3, 245, 199, 81, 171, 221, 16, 222,\n    108, 216, 27, 1, 33, 128, 11, 247, 189, 189, 207, 174, 199, 56, 141,\n  ]);\n\n  const actual = binToHex(uint8);\n  const expected =\n    '8693e641ae2bbe9ea802c736f42027b03f86afe63cae315e7169c9c496c17332ba54b224d1924dd98403f5c751abdd10de6cd81b0121800bf7bdbdcfaec7388d';\n\n  expect(expected).toEqual(actual);\n});\n"]}